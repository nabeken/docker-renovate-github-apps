name: Docker Image

permissions:
  packages: write

on:
  pull_request:
  push:
    tags:
      - 'v**'

env:
  DOCKER_BUILDKIT: '1'
  DOCKER_TEST_TAG: action-local-test
  IMAGE_NAME: renovate-github-apps

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3

    - name: Docker meta
      uses: docker/metadata-action@818d4b7b91585d195f67373fd9cb0332e31a7175 # v4
      id: meta
      with:
        # list of Docker images to use as base name for tags
        images: |
          ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}

        # generate Docker tags based on the following events/attributes
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@2b82ce82d56a2a04d2637cd93a637ae1b359c0a7 # v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@885d1462b80bc1c1c7f0b00334ad271f09369c55 # v2

    - name: Build for the test
      uses: docker/build-push-action@2eb1c1961a95fc15694676618e422e8ba1d63825 # v4
      with:
        context: .
        load: true
        tags: ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ env.DOCKER_TEST_TAG }}

    - name: Test
      run: |
        docker run --rm ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ env.DOCKER_TEST_TAG }} go-github-apps --version
        docker run --rm ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ env.DOCKER_TEST_TAG }} renovate --version

    - name: Login to GHCR
      if: github.event_name != 'pull_request'
      uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc # v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push
      uses: docker/build-push-action@2eb1c1961a95fc15694676618e422e8ba1d63825 # v4
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
